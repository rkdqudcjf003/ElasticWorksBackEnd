<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.elasticworks.api.mapper.UserMapper">
	<resultMap id="UserResult" type="User">
		<result column="idx" property="idx" />
		<result column="id" property="id" />
		<result column="pwd" property="pwd" />
		<result column="real_name" property="realName" />
		<result column="nick_name" property="nickName" />
		<result column="phone_number" property="phoneNumber" />
		<result column="email_id" property="emailId" />
		<result column="email_domain" property="emailDomain" />
		<result column="address_pre" property="addressPre" />
		<result column="address" property="address" />
		<result column="role_name" property="roleName" />
	</resultMap>
                                                                                              
	<select id="selectOneUser" resultMap="UserResult">
		SELECT
			idx,
			id,
			pwd,
			real_name,
			nick_name,
			phone_number,
			email_id,
			email_domain,
			address_pre,
			address,
			role_name
		FROM
			user
		WHERE
			id = #{id}
	</select>
	
	<select id="selectAllUser" resultType="User">
		SELECT 
		 idx,
		 id, 
		 pwd, 
		 real_name,
		 nick_name,
		 phone_number,
		 email_id,
		 email_domain,
		 address_pre,
		 address
		FROM user
	</select>
	
	
	<insert id="insertUser">
		INSERT INTO
			user (
				id,
				pwd, 
				real_name, 
				nick_name, 
				phone_number, 
				email_id,
				email_domain, 
				address1, 
				address2
				)
		VALUES (
			#{id}, 
			#{pwd}, 
			#{realName}, 
			#{nickName}, 
			#{phoneNumber}, 
			#{emailId}, 
			#{emailDomain}, 
			#{addressPre}, 
			#{address}
			)
	</insert>

	<update id="updateUser">
		UPDATE
			user
		SET
			pwd = #{pwd},
			nick_name = #{nickName},
			phone_number = #{phoneNumber},
			email_id = #{emailId},
			email_domain2 = #{emailDomain},
			addressPre = #{addressPre},
			address = #{address},
			role_name = #{roleName}
		WHERE
			id = #{id}
	</update>

	<select id="findByUserId" resultType="User">
		SELECT
			u.idx AS idx,
			u.id AS id,
			u.pwd AS pwd,
			u.real_name AS realName,
			r.name AS roleName
		FROM
			user AS u
				INNER JOIN user_role AS ur
				ON u.idx = ur.user_idx
				INNER JOIN role AS r 
				ON r.idx = ur.role_idx
		WHERE
			u.id = #{id}
    </select> 
	
	<insert id="userRoleSave">
		INSERT INTO user_role
        (
            user_idx,
            role_idx
        )
        VALUES
        (
            #{userIdx},
            #{roleIdx}
        )
	</insert>
	
	<select id="findUserNo" resultType="Integer">
		SELECT 
			u.idx
		FROM
			user u
		WHERE
			u.id = #{id}
	</select>
	
	<select id="findRoleNo" resultType="int">
		SELECT 
			idx
		FROM
			role r
		WHERE
			r.name = #{name}
	</select>
	
	<select id="findByUserPwd" resultType="string">
		SELECT 
			pwd
		FROM
			user
		WHERE
			id = #{id}
	</select>
	
	<!-- "select u from User u left join fetch u.roles r where u.username=:username" -->
	<select id="findByUserName" resultType="string">
		SELECT 
			u
		FROM
			user u
			LEFT JOIN FETCH
				u.roleName r
		WHERE
			u.id=:username
	</select>

</mapper>