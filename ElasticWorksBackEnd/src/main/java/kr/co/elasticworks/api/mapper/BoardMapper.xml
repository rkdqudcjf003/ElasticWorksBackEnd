<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.elasticworks.api.mapper.BoardMapper">
	<resultMap id="BoardResult"	type="Board">
		<result column="idx" property="idx" />
		<result column="title" property="title" />
		<result column="writer" property="writer" />
		<result column="content" property="content" />
		<result column="category_idx" property="categoryIdx" />
		<result column="category_name" property="categoryName" />
		<result column="view" property="view" />
		<result column="like_cnt" property="likeCnt" />
		<result column="delete_yn" property="deleteYn" />
		<result column="insert_time" property="insertTime" />
		<result column="update_time" property="updateTime" />
		<result column="delete_time" property="deleteTime" />
	</resultMap>
	
	<select id="getBoardList" resultMap="BoardResult" parameterType="Board">
		SELECT
			b.idx,
			b.title,
			b.writer,
			b.content,
			b.view,
			b.like_cnt,
			b.insert_time,
			b.update_time,
			(
			SELECT
				c.name
			FROM
				category c
			WHERE
				c.idx = b.category_idx
			) category_name
		FROM
			board b
		WHERE
			b.delete_yn = 0
		<!-- 검색 키워드가 있을 때 -->
		<if test="searchKeyword != null and searchKeyword != ''">
			<choose>
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="categoryIdx != '0'">
							<choose>
								<when test="'title'.equals(searchType)">
									AND title
									LIKE CONCAT('%', #{searchKeyword}, '%')
									AND category_idx
									LIKE CONCAT('%', #{categoryIdx}, '%')
								</when>
								<when test="'content'.equals(searchType)">
									AND content
									LIKE CONCAT('%', #{searchKeyword}, '%')
									AND category_idx
									LIKE CONCAT('%', #{categoryIdx}, '%')
								</when>
								<when test="'writer'.equals(searchType)">
									AND writer
									LIKE CONCAT('%', #{searchKeyword}, '%')
									AND category_idx
									LIKE CONCAT('%', #{categoryIdx}, '%')
								</when>
							</choose>
						</when>
						<when test="categoryIdx == '0'">
							<choose>
								<when test="'title'.equals(searchType)">
									AND title
									LIKE CONCAT('%', #{searchKeyword}, '%')
								</when>
								<when test="'content'.equals(searchType)">
									AND content
									LIKE CONCAT('%', #{searchKeyword}, '%')
								</when>
								<when test="'writer'.equals(searchType)">
									AND writer
									LIKE CONCAT('%', #{searchKeyword}, '%')
								</when>
							</choose>
						</when>
					</choose>
				</when>
			</choose>
		</if>
		ORDER BY
			b.idx
		ASC
		LIMIT
			#{firstBoardIndex},
			#{boardsPerPage}
	</select>
	
	
	<select id="getBoardListCnt" resultType="int" parameterType="Board">
		SELECT
			count(*)
		FROM
			board b
		WHERE
			b.delete_yn = 0
		<!-- 검색 키워드가 있을 때 -->
		<if test="searchKeyword != null and searchKeyword != ''">
			<choose>
				<!-- 검색 유형이 있을 때 -->
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="'title'.equals(searchType)">
							AND title
							LIKE CONCAT('%', #{searchKeyword}, '%')
						</when>
						<when test="'content'.equals(searchType)">
							AND content
							LIKE CONCAT('%', #{searchKeyword}, '%')
						</when>
						<when test="'writer'.equals(searchType)">
							AND writer
							LIKE CONCAT('%', #{searchKeyword}, '%')
						</when>
						
					</choose>
				</when>
				<!-- 검색 유형이 없을 때 -->
				<otherwise>
					AND (
						title
					LIKE CONCAT
						('%', #{searchKeyword}, '%')
					OR
						content
					LIKE CONCAT
						('%', #{searchKeyword}, '%')
					OR
						writer
					LIKE CONCAT
						('%', #{searchKeyword}, '%')
						)
				</otherwise>
			</choose>
		</if>
		<if test="categoryIdx != 0">
			AND (
				category_idx
			LIKE CONCAT
				('%', #{categoryIdx}, '%')
				)
		</if>
	</select>
	
	<select id="selectOneBoard" resultMap="BoardResult">
		SELECT
			b.idx,
			b.title,
			b.writer,
			b.content,
			b.view,
			b.like_cnt,
			b.insert_time,
			b.update_time,
			(
			SELECT
				c.name
			FROM
				category c
			WHERE
				c.idx = b.category_idx
			) category_name
		FROM
			board b
		WHERE
			b.idx = #{idx}
	</select>
	
	<insert id="insertBoard">
		INSERT INTO
			board (
				title,
				writer,
				content,
				category_idx,
				insert_time
				)
		VALUES (
			#{title},
			#{writer},
			#{content},
			#{categoryIdx},
			NOW()
			) 
	</insert>
	
	<update id="updateBoard" >
		UPDATE
			board b
		SET
			b.title = #{title},
			b.writer = #{writer},
			b.content = #{content},
			b.category_idx = #{categoryIdx},
			b.update_time = NOW()
		WHERE
			b.idx = #{idx}
	</update>
	
	<update id="deleteOneBoard" >
		UPDATE
			board b
		SET
			b.delete_yn = #{deleteYn},
			b.delete_time = now()
		WHERE
			b.idx = #{idx}
	</update>
	
	<select id="findByIdx" resultMap="BoardResult">
		SELECT
			b.idx
		FROM
			board b
		WHERE
			b.idx = #{idx} 
	</select>
</mapper>